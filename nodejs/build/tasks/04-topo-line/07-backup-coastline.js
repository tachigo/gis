'use strict';

var _modules = _interopRequireDefault(require("./../../modules"));

var _LibTopoLine = _interopRequireDefault(require("./LibTopoLine"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(async () => {
  const pg = await _modules.default.PgSQL.client('localhost');
  const topologyName = 'line_topo';
  const dumpTable = 'line_dump';
  const topoTable = 'line_topo';
  const schema = 'topo';
  const topology = new _LibTopoLine.default(topologyName, dumpTable, topoTable, schema);
  await _modules.default.Utils.call(`备份 外国 拓扑数据`, async () => {
    const list = await _LibTopoLine.default.getForeignList(pg);

    for await (const item of list) {
      const id = +item['id'];
      const name = item['name'];
      await _modules.default.Utils.call(`备份 ${name}#${id} 海岸线边界线 拓扑数据`, topology.backupTopologyData.bind(topology), [pg, id, 'outer', 'coastline']);
    }
  });
  await _modules.default.Utils.call(`备份 中国 拓扑数据`, async () => {
    const id = 1;
    const name = '中国';
    await _modules.default.Utils.call(`备份 ${name}#${id} 海岸线边界线 拓扑数据`, topology.backupTopologyData.bind(topology), [pg, id, 'outer', 'coastline']);
  });
  await pg.release();
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YXNrcy8wNC10b3BvLWxpbmUvMDctYmFja3VwLWNvYXN0bGluZS5qcyJdLCJuYW1lcyI6WyJwZyIsIiQiLCJQZ1NRTCIsImNsaWVudCIsInRvcG9sb2d5TmFtZSIsImR1bXBUYWJsZSIsInRvcG9UYWJsZSIsInNjaGVtYSIsInRvcG9sb2d5IiwiTGliVG9wb0xpbmUiLCJVdGlscyIsImNhbGwiLCJsaXN0IiwiZ2V0Rm9yZWlnbkxpc3QiLCJpdGVtIiwiaWQiLCJuYW1lIiwiYmFja3VwVG9wb2xvZ3lEYXRhIiwiYmluZCIsInJlbGVhc2UiXSwibWFwcGluZ3MiOiJBQUFBOztBQUdBOztBQUVBOzs7O0FBR0EsQ0FBQyxZQUFZO0FBQ1gsUUFBTUEsRUFBRSxHQUFHLE1BQU1DLGlCQUFFQyxLQUFGLENBQVFDLE1BQVIsQ0FBZSxXQUFmLENBQWpCO0FBQ0EsUUFBTUMsWUFBWSxHQUFHLFdBQXJCO0FBQ0EsUUFBTUMsU0FBUyxHQUFHLFdBQWxCO0FBQ0EsUUFBTUMsU0FBUyxHQUFHLFdBQWxCO0FBQ0EsUUFBTUMsTUFBTSxHQUFHLE1BQWY7QUFDQSxRQUFNQyxRQUFRLEdBQUcsSUFBSUMsb0JBQUosQ0FBZ0JMLFlBQWhCLEVBQThCQyxTQUE5QixFQUF5Q0MsU0FBekMsRUFBb0RDLE1BQXBELENBQWpCO0FBRUEsUUFBTU4saUJBQUVTLEtBQUYsQ0FBUUMsSUFBUixDQUFjLFlBQWQsRUFBMkIsWUFBWTtBQUMzQyxVQUFNQyxJQUFJLEdBQUcsTUFBTUgscUJBQVlJLGNBQVosQ0FBMkJiLEVBQTNCLENBQW5COztBQUNBLGVBQVcsTUFBTWMsSUFBakIsSUFBeUJGLElBQXpCLEVBQStCO0FBQzdCLFlBQU1HLEVBQUUsR0FBRyxDQUFDRCxJQUFJLENBQUMsSUFBRCxDQUFoQjtBQUNBLFlBQU1FLElBQUksR0FBR0YsSUFBSSxDQUFDLE1BQUQsQ0FBakI7QUFDQSxZQUFNYixpQkFBRVMsS0FBRixDQUFRQyxJQUFSLENBQ0gsTUFBS0ssSUFBSyxJQUFHRCxFQUFHLGNBRGIsRUFFSlAsUUFBUSxDQUFDUyxrQkFBVCxDQUE0QkMsSUFBNUIsQ0FBaUNWLFFBQWpDLENBRkksRUFHSixDQUFDUixFQUFELEVBQUtlLEVBQUwsRUFBUyxPQUFULEVBQWtCLFdBQWxCLENBSEksQ0FBTjtBQUtEO0FBQ0YsR0FYSyxDQUFOO0FBYUEsUUFBTWQsaUJBQUVTLEtBQUYsQ0FBUUMsSUFBUixDQUFjLFlBQWQsRUFBMkIsWUFBWTtBQUMzQyxVQUFNSSxFQUFFLEdBQUcsQ0FBWDtBQUNBLFVBQU1DLElBQUksR0FBRyxJQUFiO0FBQ0EsVUFBTWYsaUJBQUVTLEtBQUYsQ0FBUUMsSUFBUixDQUNILE1BQUtLLElBQUssSUFBR0QsRUFBRyxjQURiLEVBRUpQLFFBQVEsQ0FBQ1Msa0JBQVQsQ0FBNEJDLElBQTVCLENBQWlDVixRQUFqQyxDQUZJLEVBR0osQ0FBQ1IsRUFBRCxFQUFLZSxFQUFMLEVBQVMsT0FBVCxFQUFrQixXQUFsQixDQUhJLENBQU47QUFLRCxHQVJLLENBQU47QUFVQSxRQUFNZixFQUFFLENBQUNtQixPQUFILEVBQU47QUFDRCxDQWhDRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG5pbXBvcnQgJCBmcm9tICcuLy4uLy4uL21vZHVsZXMnO1xuXG5pbXBvcnQgTGliVG9wb0xpbmUgZnJvbSAnLi9MaWJUb3BvTGluZSc7XG5cblxuKGFzeW5jICgpID0+IHtcbiAgY29uc3QgcGcgPSBhd2FpdCAkLlBnU1FMLmNsaWVudCgnbG9jYWxob3N0Jyk7XG4gIGNvbnN0IHRvcG9sb2d5TmFtZSA9ICdsaW5lX3RvcG8nO1xuICBjb25zdCBkdW1wVGFibGUgPSAnbGluZV9kdW1wJztcbiAgY29uc3QgdG9wb1RhYmxlID0gJ2xpbmVfdG9wbyc7XG4gIGNvbnN0IHNjaGVtYSA9ICd0b3BvJztcbiAgY29uc3QgdG9wb2xvZ3kgPSBuZXcgTGliVG9wb0xpbmUodG9wb2xvZ3lOYW1lLCBkdW1wVGFibGUsIHRvcG9UYWJsZSwgc2NoZW1hKTtcblxuICBhd2FpdCAkLlV0aWxzLmNhbGwoYOWkh+S7vSDlpJblm70g5ouT5omR5pWw5o2uYCwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGxpc3QgPSBhd2FpdCBMaWJUb3BvTGluZS5nZXRGb3JlaWduTGlzdChwZyk7XG4gICAgZm9yIGF3YWl0IChjb25zdCBpdGVtIG9mIGxpc3QpIHtcbiAgICAgIGNvbnN0IGlkID0gK2l0ZW1bJ2lkJ107XG4gICAgICBjb25zdCBuYW1lID0gaXRlbVsnbmFtZSddO1xuICAgICAgYXdhaXQgJC5VdGlscy5jYWxsKFxuICAgICAgICBg5aSH5Lu9ICR7bmFtZX0jJHtpZH0g5rW35bK457q/6L6555WM57q/IOaLk+aJkeaVsOaNrmAsXG4gICAgICAgIHRvcG9sb2d5LmJhY2t1cFRvcG9sb2d5RGF0YS5iaW5kKHRvcG9sb2d5KSxcbiAgICAgICAgW3BnLCBpZCwgJ291dGVyJywgJ2NvYXN0bGluZSddXG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgYXdhaXQgJC5VdGlscy5jYWxsKGDlpIfku70g5Lit5Zu9IOaLk+aJkeaVsOaNrmAsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBpZCA9IDE7XG4gICAgY29uc3QgbmFtZSA9ICfkuK3lm70nO1xuICAgIGF3YWl0ICQuVXRpbHMuY2FsbChcbiAgICAgIGDlpIfku70gJHtuYW1lfSMke2lkfSDmtbflsrjnur/ovrnnlYznur8g5ouT5omR5pWw5o2uYCxcbiAgICAgIHRvcG9sb2d5LmJhY2t1cFRvcG9sb2d5RGF0YS5iaW5kKHRvcG9sb2d5KSxcbiAgICAgIFtwZywgaWQsICdvdXRlcicsICdjb2FzdGxpbmUnXVxuICAgICk7XG4gIH0pO1xuXG4gIGF3YWl0IHBnLnJlbGVhc2UoKTtcbn0pKCk7Il19